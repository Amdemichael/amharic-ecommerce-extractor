name: CI/CD for Amharic E-commerce Extractor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov papermill jupyter

      - name: Create config.yaml
        run: |
          echo "telegram:" > config.yaml
          echo "  api_id: ${{ secrets.TELEGRAM_API_ID }}" >> config.yaml
          echo "  api_hash: ${{ secrets.TELEGRAM_API_HASH }}" >> config.yaml
          echo "  phone: ${{ secrets.TELEGRAM_PHONE }}" >> config.yaml
          echo "channels:" >> config.yaml
          echo "  - '@ZemenExpress'" >> config.yaml
          echo "  - '@nevacomputer'" >> config.yaml
          echo "  - '@aradabrand2'" >> config.yaml
          echo "  - '@ethio_brand_collection'" >> config.yaml
          echo "  - '@modernshoppingcenter'" >> config.yaml

      - name: Lint with flake8
        run: |
          flake8 src/ --max-line-length=88 --extend-ignore=E203

      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_PHONE: ${{ secrets.TELEGRAM_PHONE }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
        if: success()

      - name: Run Task 1 notebook
        run: |
          papermill ./notebooks/data_ingestion.ipynb ./notebooks/data_ingestion_output.ipynb          
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_PHONE: ${{ secrets.TELEGRAM_PHONE }}

      - name: Validate processed data
        run: |
          python src/preprocess.py --validate
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_PHONE: ${{ secrets.TELEGRAM_PHONE }}

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Create config.yaml
        run: |
          echo "telegram:" > config.yaml
          echo "  api_id: ${{ secrets.TELEGRAM_API_ID }}" >> config.yaml
          echo "  api_hash: ${{ secrets.TELEGRAM_API_HASH }}" >> config.yaml
          echo "  phone: ${{ secrets.TELEGRAM_PHONE }}" >> config.yaml
          echo "channels:" >> config.yaml
          echo "  - '@ZemenExpress'" >> config.yaml
          echo "  - '@nevacomputer'" >> config.yaml
          echo "  - '@aradabrand2'" >> config.yaml
          echo "  - '@ethio_brand_collection'" >> config.yaml
          echo "  - '@modernshoppingcenter'" >> config.yaml

      - name: Build deliverables
        run: |
          python src/data_ingestion.py
          python src/preprocess.py

      - name: Archive deliverables
        uses: actions/upload-artifact@v4
        with:
          name: deliverables
          path: |
            docs/*.pdf
            docs/channels.txt
            results/*.csv
            data/processed/telegram_data_final.csv